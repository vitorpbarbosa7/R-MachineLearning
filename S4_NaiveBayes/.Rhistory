licence()
contributors()
demo()
error.catching
q()
q()
4 + 5
#Subtração
4 - 5
4 - 5
#Adição
4 + 5
#Subtração
4 - 5
#Divisao
4/6
#Multiplicacao
4*6
4*6e
4*6e
4*6e
4/6
4 - 5
4 ^2
4 ^ 4
2 %% 5
5 %% 2
jeca
jeca <- 24
jeca
variavel <- 10
variavel
string <- vitor
string <- 'vitor'
string
q()
q()
q()
variavel <- "Churros"
variavel
x <- 20 ^2
x
x / 200
clc()
clear()
ls()
q()
q()
ls
clear
cls
clear
l = [1,2,3]
l = (1,2,3)
l = c(1,2,3)
l
#DivisÃ£o de base de treinamento e de teste:
library(caTools)
divisao = sample.split(base, SplitRatio = 0.85)
#DivisÃ£o de base de treinamento e de teste:
library(caTools)
divisao = sample.split(base, SplitRatio = 0.85)
setwd("C:\\Users\\Vitor Barbosa\\Google Drive\\DS\\Udemy-R-MachineLearning\\S3_PreProcessamento")
rm(list=ls())
cat("\014")
base = read.csv("census.csv")
#Removendo a primeira coluna de autoincremento que Ã© inÃºtil no aprendizado de mÃ¡quina:
base$X = NULL
base$sex = factor(base$sex, levels = unique(base$sex), labels = seq(0,c(dim(array(unique(base$sex)))-1)))
base$workclass = factor(base$workclass, levels = unique(base$workclass), labels = seq(0,c(dim(array(unique(base$workclass)))-1)))
base$education = factor(base$education, levels = unique(base$education), labels = seq(0,c(dim(array(unique(base$education)))-1)))
base$marital.status = factor(base$marital.status, levels = unique(base$marital.status), labels = seq(0,c(dim(array(unique(base$marital.status)))-1)))
base$occupation = factor(base$occupation, levels = unique(base$occupation), labels = seq(0,c(dim(array(unique(base$occupation)))-1)))
base$relationship = factor(base$relationship, levels = unique(base$relationship), labels = seq(0,c(dim(array(unique(base$relationship)))-1)))
base$race = factor(base$race, levels = unique(base$race), labels = seq(0,c(dim(array(unique(base$race)))-1)))
base$native.country = factor(base$native.country, levels = unique(base$native.country), labels = seq(0,c(dim(array(unique(base$native.country)))-1)))
base$income = factor(base$income, levels = unique(base$income), labels = seq(0,c(dim(array(unique(base$income)))-1)))
for (i in c(1,3,5,11,12,13)){
base[,i] = scale(base[,i])
}
library(caTools)
divisao = sample.split(base, SplitRatio = 0.85)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
setwd("C:\\Users\\Vitor Barbosa\\Google Drive\\DS\\Udemy-R-MachineLearning\\S3_PreProcessamento")
rm(list=ls())
cat("\014")
base = read.csv("census.csv")
head(base)
#Removendo a primeira coluna de autoincremento que Ã© inÃºtil no aprendizado de mÃ¡quina:
base$X = NULL
#TransformaÃ§Ã£o em atributos categÃ³ricos em atributos discretos:
table(base$sex)
table(base$workclass)
#Olhar os levels, os niveis:
unique(base$sex)
unique(base$workclass)
#TransformaÃ§Ã£o deu certinho
base$sex = factor(base$sex, levels = unique(base$sex), labels = seq(0,c(dim(array(unique(base$sex)))-1)))
base$workclass = factor(base$workclass, levels = unique(base$workclass), labels = seq(0,c(dim(array(unique(base$workclass)))-1)))
base$education = factor(base$education, levels = unique(base$education), labels = seq(0,c(dim(array(unique(base$education)))-1)))
base$marital.status = factor(base$marital.status, levels = unique(base$marital.status), labels = seq(0,c(dim(array(unique(base$marital.status)))-1)))
base$occupation = factor(base$occupation, levels = unique(base$occupation), labels = seq(0,c(dim(array(unique(base$occupation)))-1)))
base$relationship = factor(base$relationship, levels = unique(base$relationship), labels = seq(0,c(dim(array(unique(base$relationship)))-1)))
base$race = factor(base$race, levels = unique(base$race), labels = seq(0,c(dim(array(unique(base$race)))-1)))
base$native.country = factor(base$native.country, levels = unique(base$native.country), labels = seq(0,c(dim(array(unique(base$native.country)))-1)))
base$income = factor(base$income, levels = unique(base$income), labels = seq(0,c(dim(array(unique(base$income)))-1)))
#Escalonamento:
#SÃ³ foi possÃ­vel aplicar o escalonamento para aqueles que sÃ£o diretamente nÃºmeros
#Aqueles que sofreram o prcesso de categorizaÃ§Ã£o nÃ£o Ã© possÃ­vel
for (i in c(1,3,5,11,12,13)){
base[,i] = scale(base[,i])
}
#DivisÃ£o de base de treinamento e de teste:
library(caTools)
set.seed(1)
divisao = sample.split(base$income, SplitRatio = 0.85)
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
rm(list=ls())
cat("\014")
dados = read.csv('risco_credito.csv')
iinstall.packages('e1071')
install.packages("e1071")
library(e1071)
dados = read.csv('risco_credito.csv')
setwd("C:\\Users\\Vitor Barbosa\\Google Drive\\DS\\Udemy-R-MachineLearning\\S4_NaiveBayes")
dados = read.csv('risco_credito.csv')
View(dados)
#Naive Bayes aceita variÃ¡veis categÃ³ricas
classificador = naiveBayes(dados[,1:4],dados[,5])
classificador
#Naive Bayes aceita variÃ¡veis categÃ³ricas
classificador = naiveBayes(dados[-5],dados[,5])
classificador
View(classificador)
