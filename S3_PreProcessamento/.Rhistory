licence()
contributors()
demo()
error.catching
q()
q()
4 + 5
#SubtraÁ„o
4 - 5
4 - 5
#AdiÁ„o
4 + 5
#SubtraÁ„o
4 - 5
#Divisao
4/6
#Multiplicacao
4*6
4*6e
4*6e
4*6e
4/6
4 - 5
4 ^2
4 ^ 4
2 %% 5
5 %% 2
jeca
jeca <- 24
jeca
variavel <- 10
variavel
string <- vitor
string <- 'vitor'
string
q()
q()
q()
variavel <- "Churros"
variavel
x <- 20 ^2
x
x / 200
clc()
clear()
ls()
q()
q()
ls
clear
cls
clear
l = [1,2,3]
l = (1,2,3)
l = c(1,2,3)
l
rm(list=ls())
cat("\014")
setwd("C:\\\\Users\\Vitor Barbosa\\Google Drive\\!P√≥s\\!Disciplinas\\PQI5858\\Exercicios\\Aula4")
dados = read.csv('dados.csv')
#Base de an√°lise de dados avan√ßada:
library(xda)
numSummary(dados)
dados = read.csv('dados.csv', sep = ',')
numSummary(dados)
View(dados)
dados = read.csv('dados.csv', sep = ';')
View(dados)
dados = read.csv('dados.csv', sep = ';')
View(dados)
dados = read.csv('dados.csv', sep = ';')
numSummary(dados)
plot(dados$√Ø..Dia, dados$F1)
scatter(dados$√Ø..Dia, dados$F1)
qplot(dados$√Ø..Dia, dados$F1)
library(ggplot)
library(ggplot2)
qplot(dados$√Ø..Dia, dados$F1)
boxplot(dados$F1)
setwd("C:\\Users\\Vitor Barbosa\\Google Drive\\DS\\Udemy-R-MachineLearning\\S3_PreProcessamento")
rm(list=ls())
cat("\014")
base = read.csv("census.csv")
#Removendo a primeira coluna de autoincremento que √© in√∫til no aprendizado de m√°quina:
base$X = NULL
#Transforma√ß√£o deu certinho
base$sex = factor(base$sex, levels = unique(base$sex), labels = seq(0,c(dim(array(unique(base$sex)))-1)))
base$workclass = factor(base$workclass, levels = unique(base$workclass), labels = seq(0,c(dim(array(unique(base$workclass)))-1)))
base$education = factor(base$education, levels = unique(base$education), labels = seq(0,c(dim(array(unique(base$education)))-1)))
base$marital.status = factor(base$marital.status, levels = unique(base$marital.status), labels = seq(0,c(dim(array(unique(base$marital.status)))-1)))
base$occupation = factor(base$occupation, levels = unique(base$occupation), labels = seq(0,c(dim(array(unique(base$occupation)))-1)))
base$relationship = factor(base$relationship, levels = unique(base$relationship), labels = seq(0,c(dim(array(unique(base$relationship)))-1)))
base$race = factor(base$race, levels = unique(base$race), labels = seq(0,c(dim(array(unique(base$race)))-1)))
base$native.country = factor(base$native.country, levels = unique(base$native.country), labels = seq(0,c(dim(array(unique(base$native.country)))-1)))
base$income = factor(base$income, levels = unique(base$income), labels = seq(0,c(dim(array(unique(base$income)))-1)))
#Verificar se h√° valores faltantes
base[is.na(base$sex)]
#Escalonamento:
base = scale(base)
#Escalonamento:
base = scale(as.numeric(base))
View(base)
#Escalonamento:
base[,1] = scale(base[,1])
for i in c(1,3,5,11,12,13){
base[,i] = scale(base[,i])
}
for (i in c(1,3,5,11,12,13)){
base[,i] = scale(base[,i])
}
base = read.csv('credit_data.csv')
#Deletar o ID do cliente porque √© in√∫til no algoritmo de aprendizado de m√°quina
base$clientid = NULL
library(xda)
numSummary(base)
library(corrplot)
correlacao = cor(base[,1:3])
corrplot(correlacao,
method = "number")
#Mostrar apenas os negativos, sem os nulos
#Nega-se os nulos com !is.na(base$age)
idades_invalidas = base[base$age<0 & !is.na(base$age),]
#1 - Apagar a coluna inteira:
base$age = NULL
#Carregando a base de dados
base = read.csv('credit_data.csv')
setwd("C:\\Users\\Vitor Barbosa\\Google Drive\\DS\\Udemy-R-MachineLearning\\S3_PreProcessamento")
rm(list=ls())
cat("\014")
#Carregando a base de dados
base = read.csv('credit_data.csv')
#Deletar o ID do cliente porque √© in√∫til no algoritmo de aprendizado de m√°quina
base$clientid = NULL
#Olhar o resumo dos dados:
summary(base)
is.na(base)
library(xda)
numSummary(base)
library(corrplot)
correlacao = cor(base[,1:3])
correlacao
corrplot(correlacao,
method = "number")
#Mostrar apenas os negativos, sem os nulos
#Nega-se os nulos com !is.na(base$age)
idades_invalidas = base[base$age<0 & !is.na(base$age),]
#
# #1 - Apagar a coluna inteira:
# base$age = NULL
#
# #2 - Apagar somente os registros com problema
# base = base[base$age>0,]
#3 - Preencher os dados manualmente:
#4 - Preencher com a m√©dia dos valores:
#Substitui√ß√£o dos valores negativos
base$age = ifelse(base$age<0,mean(base$age[base$age>0], na.rm = T),base$age)
#Substitui√ß√£o dos missing pela m√©dia
base$age = ifelse(is.na(base$age),mean(base$age[base$age>0], na.rm = T),base$age)
numSummary(base)
#Escolonamento
base[,1:3] = scale(base[,1:3])
numSummary(base) #Poss√≠vel observar agora como todos est√£o escalonados
#Escalonamento:
#Divis√£o em base de treinamento e de teste
install.packages("caTools")
library(caTools)
#Passa-se o atributo da classe (resposta)
#Splitratio refere-se a base de dados de treinamento
divisao = sample.split(base$default, SplitRatio = 0.75)
divisao
base_treinamento = subset(base[divisao,])
base_treinamento = base[divisao,]
View(base_treinamento)
#ou
base_treinamento = subset(base, divisao = TRUE)
#ou
base_treinamento = subset(base, divisao == TRUE)
base_teste = subset(base, divisao == FALSE)
